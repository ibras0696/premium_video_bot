from datetime import datetime, timezone

from config import REFFER_LINK
from keyboards import inline_keyboard_buttons
from database import CrudeUser, CrudeSubscriptions, Subscriptions, CrudePayments

# Кнопка старт
start_text = '''
🎁 Добро пожаловать в NFT-бокс знаний!

Тут всё просто:

• 🖼️ NFT — простым языком

• 📚 Только нужная инфа

• 🚫 Никакой воды


🔓 Готов изменить свою жизнь?

💡 Залетай к нам за знаниями! 😉🚀🔥

‼️Видео обязательно к просмотру‼️
'''

# После кнопки старт
ref_and_course_text = '''
🔗 Ниже ты найдёшь:

✨ Свою реферальную ссылку-скорее зови друзей!
 
📚 И доступные обучающие курсы
'''


# Реферальная ссылка
async def refer_id_text(telegram_id: int) -> str:
    conn = CrudeUser()
    user_ref_ids = await conn.get_users_by_referral(telegram_id)
    # Пользователь
    user = await conn.get_user(telegram_id)
    # Объект платежей
    payments_user = await CrudePayments().get_all_payments_and_user(referral_id=telegram_id)

    cont_users = len(user_ref_ids) if user_ref_ids else 0
    return (f'🎉 Зарабатывай вместе с нами!'
            f'\n📣 Приглашай друзей — получай бонусы!\n'
            f'\n🔗 8% с каждой покупки по твоей реферальной ссылке 💸 \n💵 Вывод от 1 000 до 15 000 ₽'
            f'\n\n👥 Больше друзей — больше заработок!\n'
            f'\n📨 Твоя персональная реферальная ссылка:\n👉{REFFER_LINK}{telegram_id}'
            f'\n\n📊 Статистика:'
            f'\n👤 Приглашено: {cont_users}'
            f'\n🛍️ Покупок: {len(payments_user) if payments_user else 0}'
            f'\n💰 Баланс: {user.balance}')


# КБ при нажатии "Хочу Курс"
course_text = '📘 Выбери нужный курс ниже, чтобы узнать больше и сразу начать обучение! 🚀'


# Функция для получения текста о профиле
async def get_profile_text(telegram_id: int) -> None | str:
    sub_con = await CrudeSubscriptions().get_all_user_subscriptions(telegram_id)
    user = await CrudeUser().get_user(telegram_id)
    if user:
        txt_user = (
            # f'🆔 Уникальный ID: {user.id}'
            f'\n👤 Telegram ID: {user.telegram_id}'
            f'\n📛 Имя пользователя: {user.user_name}'
            f'{f"\n🤝 Пригласивший (реф ID): {user.referral_id}" if user.referral_id else ""}'
            # f'\n💰 Баланс: {user.balance} ⭐'
        )
        data_plans = Subscriptions.get_plans()
        links = Subscriptions.get_group_link()

        if sub_con and sub_con:
            sub_text = ''
            for sub in sub_con:
                if sub.day_count > 0:
                    sub_text += (
                        f'\n\n📅 Подписка от: {sub.day}.{sub.month}.{sub.year}'
                        f'\n📦 Тариф: {data_plans.get(sub.plan)}'
                        f'\n👥 Чат-участников: {links.get(sub.plan)}'
                        f'\n⏳ Доступ: {sub.day_count} дней'
                    )
            txt_user += sub_text  # <--- Была ошибка здесь, раньше результат не добавлялся
            sub_text += '\n📚 Удачного обучения и больших инсайтов!'
        return txt_user
    else:
        return None


# Курсы
base_course_text = '''
Тариф «Базовый»

🔓 Полный доступ к крипто-функциям Telegram — даже если мир против 😎💼

🚀 Что ты получаешь:

• 🧠💼 Пошаговая верификация в Telegram-кошельке — легко, чётко, без запары

• 💵📲 Покупка крипты за рубли — прямо внутри Telegram, без лишних телодвижений

• 🤝💸 Продажа крипты через P2P — напрямую, быстро и безопасно

• 🔄⚡️ Молниеносный обмен криптовалют — не выходя из Telegram

• 🛡🚫 Кошелёк заблочен или тебе <18? Обойдём любые ограничения без нервов

• 🌍💱 Не из РФ? Покажем, как менять крипту на локальную валюту где угодно в мире из доступного в Тг

🟩 Telegram без границ, возрастов и ограничений — для своих 💚🔥
'''
advanced_course_text = '''
🟡 Тариф “Продвинутый”

⭐ Уникальные Telegram-функции: премиум, звёзды и аукционы — по лучшим ценам!

 • 💎 Доступ к Telegram Premium и звёздам — по самым выгодным расценкам

 • 🎁 Покупка премиума и звёзд для себя или в подарок другим пользователям

 • 🏷️ Выставление своего уникального username на аукцион

 • 🔢 Продажа эксклюзивного Telegram-номера

 • 🧭 Подробная регистрация на платформе, которую мы изучаем

 • 🔐 Подключение любых кошельков с учётом всех технических нюансов

 • 🛍️ Покупка любых позиций с аукциона — безопасно и выгодно

🟡 Максимум Telegram — без переплат и с гарантией!
'''
exclusive_course_text = '''
🔥 Тариф “Эксклюзивный”

🦈 Полный гайд по Telegram NFT и аукционам — от новичка до акула рынка!

 • 🎨 Отличие обычного подарка от настоящего NFT — раз и навсегда

 • 🛒 Покупка NFT-подарков: как, где и зачем

 • 🔍 Определение редких и дорогих NFT в Telegram

 • 📤 Передача NFT другим пользователям

 • 📈 Мониторинг рыночных цен

 • 💰 Правильная продажа NFT

 • 💸 Гибкое изменение цены

 • 🧾 Покупка чужих NFT — безопасно и быстро

 • 🏷️ Выставление своих NFT на аукцион

 • 🎯 Участие в аукционах Telegram

 • 🤖 Создание ордеров на автоматическую покупку

 • 🦈 Стратегия роста: как стать “акулой” в нише NFT-подарков

🔥 Полный контроль. Реальные сделки. Telegram как бизнес
'''
all_course_text = '''
🏆 ТАРИФ “ВСЁ СРАЗУ”

✨ Максимум знаний. Все фишки. Один тариф.

⸻

💰 КРИПТА В TELEGRAM — БЕЗ ОГРАНИЧЕНИЙ

 • 🛡️ Верификация и запуск кошелька

 • 💸 Покупка/продажа крипты за рубли

 • 🔁 P2P-обмен внутри Telegram

 • 🚫 Обход блокировок (если нет 18 или бан)

 • 🌍 Поддержка любых стран и валют

⸻

🌟 PREMIUM + ЗВЁЗДЫ — ВЫГОДНО И ЛЕГКО

 • ⭐ Premium и звёзды по самым низким ценам

 • 🎁 Как дарить премиум/звёзды другим

 • 🏷️ Аукционы: юзернейм и уникальный номер

 • 🔗 Подключение любых кошельков без ошибок

 • 🛡️ Работаем безопасно — на практике

⸻

🔥 NFT + АУКЦИОНЫ — ПОЛНОЕ ПОГРУЖЕНИЕ

 • 🎨 Отличие обычных подарков от настоящих NFT

 • 🧩 Как покупать, продавать и дарить NFT

 • 📊 Мониторинг цен в Telegram

 • 🛍️ Выставление на аукцион + участие

 • 🤖 Создание ордеров на авто-покупку

 • 🦈 Стратегия: как стать «акулой» в нише NFT

⸻

🎁 В ОДНОМ ТАРИФЕ ТЫ ПОЛУЧАЕШЬ:

✅ Всё из базового, продвинутого и эксклюзивного

✅ Личный гайд + поддержка

✅ Полный  доступ

✅ Самую полную прокачку Telegram-функций

⸻

📣 Вывод: хочешь всё и сразу — бери ВСЁ.
🔓 Открываешь все двери. Без ограничений.
🚀 Стартуй как профи.
'''

# КБ покупки курса
pay_course_text = '💳 Оплата курса:\nВыберите курс, оплатите его звёздами ⭐ и получите доступ к материалам!'

# 🧾 Меню оплаты
pay_time_text = "💳 Меню оплаты"

# ✅ Успешная покупка курса
accept_course_text = '''
🎉 Покупка прошла успешно!

📘 Твой курс активирован — добро пожаловать в мир знаний!\n
'''

# 🛠️ Техническая поддержка
support_message_text = (
    "🛠️ Техническая поддержка\n"
    "👤 @this_is_originall"
)

# 💰 Панель снятия средств
pay_take_text = "💸 Панель снятия денег!"


# ⏳ Уведомление о скором окончании подписки
async def push_subs_text(day: int, plan: str) -> str:
    return (
        f"⚠️ Ваша подписка {plan} скоро закончится!\n"
        f"📅 Осталось: {day} дней"
    )


# ❌ Уведомление об окончании подписки
async def end_push_sub_text(plan: str) -> str:
    return f"🚫 Ваша подписка {plan} завершилась."


# В случае окончания срока платежа
end_payment_text = '⏳ Время ожидания оплаты истек.\nПопробуйте оформить подписку ещё раз.'

# В случае ожидания оплаты платежа
loading_payment_text = '💬 Платёж ожидает подтверждения.\nПожалуйста, оплатите и посмотрите'

# Сообщение при предупреждении снятия баланс
warning_take_off_text = (
    '⚠️ Сумма вывода должна быть больше 500 и меньше 15 000 рублей\n'
    'Пожалуйста, попробуйте позже'
)

# Сообщение при запросе денег
take_of_text = (
    '💬 Введите данные для вывода в формате:\n'
    'Сумма Номер_счета_или_телефона Банк\n\n'
    '📌 Пример:\n1000 2202200111110000 Сбербанк'
)


# 🧾 Составление чека на вывод средств от пользователя
def take_of_many_loading_text(telegram_id: int, summa: int, number: int, bank: str) -> str:
    return (
        f'🧾 Чек на вывод средств\n'
        f'🕒 Время: {datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M UTC")}\n'
        f'🆔 Telegram ID: {telegram_id}\n'
        f'💸 Сумма: {summa} ₽\n'
        f'🏦 Реквизиты: {number}\n'
        f'🏛 Банк: {bank}'
    )


# ✅ Уведомление о платеже и его обработке
take_push_message_text = (
    '⏳ Ваш запрос на вывод средств принят.'
    '\n🕒 Ожидайте обработку в течение 1–3 дней.'
)


# 📥 Уведомление администратору о новом платеже
def admin_take_confirm_text(text: str):
    return (
        '📥 Поступил новый платёж на вывод'
        f'\n\n🔎 Детали запроса:\n{text}'
    )
